pipeline {
    agent any

    triggers{
        cron(BRANCH_NAME == "master" ? "H H(2-5) * * *": "")
    }

    options {
        disableConcurrentBuilds()
        skipDefaultCheckout()
    }

    environment {
        PIP_INDEX_URL='https://artifacts.internal.inmanta.com/inmanta/dev'
    }

    stages {
        stage("clear workspace and checkout source code") {
            steps {
                deleteDir()
                checkout scm
            }
        }
        stage("setup virtualenv") {
            steps {
                sh'''
                    python3 -m venv env
                    env/bin/pip install -U pip poetry pytest

                    # explicitly activate environment so poetry knows to install within it
                    source env/bin/activate

                    poetry install
                '''
            }
        }
        stage("run tests") {
            steps {
                sh 'sudo env/bin/pytest -v -s --junitxml=junit.xml'
            }
        }
    }

    post {
        always {
            // deal with root-owned files resulting from the use of sudo above
            sh 'sudo chown -R jenkins:jenkins .'

            junit 'junit.xml'
        }
    }
}
