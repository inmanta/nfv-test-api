[tool.poetry]
name = "inmanta-nfv-test-api"
version = "2.4.1"
description = "API for testing network functions."
authors = ["Inmanta <code@inmanta.com>"]
license = "Apache-2.0"
include=["misc/*"]
packages = [
    { include = "nfv_test_api", from = "src" },
    { include = "pytest_nfv_test_api", from = "src" },
]

[tool.poetry.plugins.console_scripts]
nfv-test-api = "nfv_test_api.main:main"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
Flask = "^1.1.1"
PyYAML = "^5.3"
flask-cors = "^3.0.8"
click = "^7.0"
pingparsing = "^1.0.1"
trparse = "^0.3.0"
flask-restplus = "^0.13.0"
Werkzeug = "0.16.1"
flask-apispec = "^0.11.0"
apispec = "^5.1.1"
requests = "^2.23.0"
pydantic = "^1.8.2"

MarkupSafe = "2.0.1"

[tool.poetry.plugins.pytest11]
nfv_test_api = "pytest_nfv_test_api"

[tool.poetry.dev-dependencies]
docker = "^5.0.3"
mypy = "*"
lxml = "*"
pytest = "^6.2.5"
pytest-flask = "^1.0.0"
inmanta-dev-dependencies = { extras = ["module"], version = "^1.59.0"}
types-PyYAML = "^6.0.4"
types-requests = "^2.27.11"

[tool.black]
line-length = 128
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.env
  | _build
  | buck-out
  | build
  | dist
)/
'''

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
